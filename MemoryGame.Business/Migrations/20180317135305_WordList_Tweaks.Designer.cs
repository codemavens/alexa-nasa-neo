// <auto-generated />
using MemoryGame.Business.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace MemoryGame.Business.Migrations
{
    [DbContext(typeof(MemoryGameContext))]
    [Migration("20180317135305_WordList_Tweaks")]
    partial class WordList_Tweaks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MemoryGame.Business.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Descr");

                    b.Property<string>("Name");

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("MemoryGame.Business.Models.GameLevel", b =>
                {
                    b.Property<int>("GameLevelId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("FailureSoundUrl");

                    b.Property<int>("GameId");

                    b.Property<string>("Name");

                    b.Property<int>("NumWords");

                    b.Property<string>("SuccessSoundUrl");

                    b.HasKey("GameLevelId");

                    b.HasIndex("GameId");

                    b.ToTable("GameLevels");
                });

            modelBuilder.Entity("MemoryGame.Business.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Name");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MemoryGame.Business.Models.UserState", b =>
                {
                    b.Property<int>("UserStateId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CurrentScore");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<int>("GameLevelId");

                    b.Property<int>("UserId");

                    b.HasKey("UserStateId");

                    b.HasIndex("GameLevelId");

                    b.HasIndex("UserId");

                    b.ToTable("UserState");
                });

            modelBuilder.Entity("MemoryGame.Business.Models.WordList", b =>
                {
                    b.Property<int>("WordListId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<int>("GameId");

                    b.Property<bool>("Randomize")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Words")
                        .IsRequired();

                    b.HasKey("WordListId");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("WordLists");
                });

            modelBuilder.Entity("MemoryGame.Business.Models.GameLevel", b =>
                {
                    b.HasOne("MemoryGame.Business.Models.Game", "Game")
                        .WithMany("Levels")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MemoryGame.Business.Models.UserState", b =>
                {
                    b.HasOne("MemoryGame.Business.Models.GameLevel", "GameLevel")
                        .WithMany()
                        .HasForeignKey("GameLevelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MemoryGame.Business.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MemoryGame.Business.Models.WordList", b =>
                {
                    b.HasOne("MemoryGame.Business.Models.Game", "Game")
                        .WithOne("WordList")
                        .HasForeignKey("MemoryGame.Business.Models.WordList", "GameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
